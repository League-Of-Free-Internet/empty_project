name: App code style workflow

on: [ push ]

env:
  DEBUG: ${{ secrets.DEBUG }}
  ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DB_ENGINE: ${{ secrets.DB_ENGINE }}
  DB_NAME: ${{ secrets.DB_NAME }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}

jobs:
  build:
    name: Test Project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_HOST: ${{ secrets.DB_LOCAL_HOST }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          cd ../empty_project/requirements/
          python -m pip install --upgrade pip
          pip install -r develop.txt

      - name: Set up database
        run: |
          echo "Waiting for PostgreSQL..."
          while ! nc -z localhost 5432; do sleep 1; done
          echo "PostgreSQL started"
          cd ../empty_project/src/
          python manage.py migrate

      - name: Test with flake8
        run: flake8

      - name: Test with black
        run: black .

      - name: Django Unit Test
        run: python manage.py test
