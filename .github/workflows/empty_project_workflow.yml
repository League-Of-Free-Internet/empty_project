name: App code style workflow

on: [ push ]

env:
  DEBUG: ${{ secrets.DEBUG }}
  ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DB_ENGINE: ${{ secrets.DB_ENGINE }}
  DB_NAME: ${{ secrets.DB_NAME }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}

jobs:
  build:
    name: Build Postgres Database for tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - ${{ secrets.DB_PORT }}:${{ secrets.DB_PORT }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install -r ../requirements/develop.txt

      - name: Set up database
        run: |
          python manage.py migrate

  tests:
    name: Test project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install -r ../requirements/develop.txt

      - name: Test with flake8
        run: flake8

      - name: Test with black
        run: black .

      - name: Django Unit Test
        run: |
          python manage.py test
