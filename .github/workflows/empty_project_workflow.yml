name: App code style workflow

on: [ push ]

jobs:
  build:
    name: Test Project ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    env:
      DEBUG: ${{ secrets.DEBUG }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      DB_NAME: ${{ secrets.DB_NAME }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      GITHUB_WORKFLOW: True
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_action_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ../empty_project/requirements/develop.txt

      - name: Test with flake8
        run: flake8

      - name: Test with black
        run: black .

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL..."
          until nc -z localhost 5432; do
            echo "PostgreSQL is unavailable - sleeping"
            sleep 1
          done
          echo "PostgreSQL is up - continuing"

      - name: Set up database
        run: |
          python ../empty_project/src/manage.py makemigrations users
          python ../empty_project/src/manage.py migrate

      - name: Django Unit Test
        run: python ../empty_project/src/manage.py test
